#!/bin/bash

export NAME="python"
export VERSION="3.8.0"
source ./config

fetch_http "https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz"

declare -a deps=( "xz/5.2.4" "sqlite/3300100" )
#declare -a deps=( "mpich/3.2" "hdf5/1.8.20" "netcdf/4.5.0" "netcdf_fortran/4.4.4" )

function build_script {
	cd Python-3.8.0
	module_load "${deps[@]}"

    set -x
	SSLDIR="$(readlink -f $(dirname $(which openssl))/..)"
	XZDIR="$(readlink -f $(dirname $(which xz))/..)"
	SQL="$(readlink -f $(dirname $(which sqlite3))/..)"
	export CC="$(which gcc)"
	export CXX="$(which g++)"
	export LDFLAGS="$LDFLAGS -L$SSLDIR/lib -L$XZDIR/lib -L$SQL/lib"
	export CPPFLAGS="$CPPFLAGS -I$SSLDIR/include -I$XZDIR/include -I$SQL/include"
	export CFLAGS="$CFLAGS -I$SSLDIR/include -I$XZDIR/include -I$SQL/include"
	#export CPPFLAGS="-ggdb -O0"
	#export CFLAGS="-ggdb -O0"
	#./configure --prefix=$PREFIX --with-pydebug --with-valgrind
	./configure \
		--prefix=$PREFIX \
        --enable-loadable-sqlite-extensions \
        --enable-shared \
		--with-ensurepip=install || die "Couldn't configure"
	#--with-valgrind \

	make -j${THREAD_NUM} || die "Couldn't make"
	make install || die "Couldn't install"
    set +x
}

build_with build_script

module_init
module_deps "${deps[@]}"
auto_module_paths
